name: app-release-dispatch

# Controls when the workflow will run
on:
  repository_dispatch:
    types: ["app-release"]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: build definitions
        id: create_definitions
        env: 
          SOURCE: ${{ github.event.client_payload.repository }}
          PACKAGE: ${{ github.event.client_payload.package }}
          VERSION: ${{ github.event.client_payload.version }}
          SHA256: ${{ github.event.client_payload.sha256 }}
          ID: ${{ github.event.client_payload.id }}
        run: |
          # git checkout -b "$SOURCE-new-release"
          export PACKAGE_DEF_PATH=$(printf $id | sed "s/\./\//g")
          printf '{ "source": "$PACKAGE", "sha256": "$SHA256", "version": "$VERSION" }' > ami/definition/$PACKAGE_DEF_PATH/latest.json
          printf '{ "source": "$PACKAGE", "sha256": "$SHA256", "version": "$VERSION" }' > ami/definition/$PACKAGE_DEF_PATH/v/${{github.ref_name}}.json
          echo "::set-output name=PACKAGE_DEF_PATH::$PACKAGE_DEF_PATH"

      - name: Add & Commit
        env:
          SOURCE: ${{ github.event.client_payload.repository }}
          PACKAGE_DEF_PATH: ${{ steps.create_definitions.outputs.PACKAGE_DEF_PATH }}
        uses: EndBug/add-and-commit@v7.5.0
        with: 
          add: '[ "ami/definition/$PACKAGE_DEF_PATH/latest.json", "ami/definition/$PACKAGE_DEF_PATH/v/${{github.ref_name}}.json" ]'
          push: ""  # --set-upstream origin $SOURCE-new-release"        
